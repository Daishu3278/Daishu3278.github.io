<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MyBatis</title>
      <link href="/2021/09/11/MyBatis/MyBatis/"/>
      <url>/2021/09/11/MyBatis/MyBatis/</url>
      
        <content type="html"><![CDATA[<h1 id="MyBatis框架"><a href="#MyBatis框架" class="headerlink" title="MyBatis框架"></a>MyBatis框架</h1><h1 id="第一章框架的概述"><a href="#第一章框架的概述" class="headerlink" title="第一章框架的概述"></a>第一章框架的概述</h1><h2 id="1-三层架构"><a href="#1-三层架构" class="headerlink" title="1.三层架构"></a>1.三层架构</h2><p>mvc: web开发中，使用mvc架构模式。m: 数据，v: 视图，C: 控制器。<br>　　　C控制器: 接收请求，调用service对象，显示请求的处理结果。当前使用servlet作为控制器<br>　　　v视图: 现在使用jsp， html, Css, js。显示请求的处理结果, 把m中数据显示出来。<br>　　　m数据: 来自数据库mysq|， 来自文件，来自网络</p><p>mvc作用:<br>　　1)实现解耦合。<br>　　2)让mvc各负其职。<br>　　3)使得系统扩展更好， 更容易维护。</p><p>三层架构:<br>　　1.界面层(视图层): 接收用户的请求，调用service，显示请求的处理结果的。<br>　　包含了jsp, html, servlet等对象。对应的包controller,<br>　　2.业务逻辑层: 处理业务逻辑，使用算法处理数据的。把数据返回给界面层。<br>　　对应的是service包，和包中的很多的XXXService类。例如: StudentService，OrderService, ShopService<br>　　3.持久层(数据库访问层): 访问数据库，或者读取文件，访问网络。获取数据。<br>　　对应的包是dao。dao包中很多的StudentDao, OrderDao, ShopDao等等。</p><h2 id="2-三层架构请求的处理流程"><a href="#2-三层架构请求的处理流程" class="headerlink" title="2.三层架构请求的处理流程"></a>2.三层架构请求的处理流程</h2><p>用户发起请求—&gt;界面–&gt;业务逻辑—&gt;持久—&gt;数据库(mysql)</p><p><img src="https://gitee.com/kokolote/pic/raw/master/img/mybaitis/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20210911222937.png" alt="微信图片_20210911222937.png"></p><h2 id="3-为什么要使用三层"><a href="#3-为什么要使用三层" class="headerlink" title="3.为什么要使用三层?"></a>3.为什么要使用三层?</h2><p>1，结构清晰、耦合度低，各层分工明确<br>2，可维护性高，可扩展性高<br>3，有利于标准化<br>4，开发人员可以只关注整个结构中的其中某一层的功能实现<br>5，有利于各层逻辑的复用</p><h2 id="4-三层架构模式和框架"><a href="#4-三层架构模式和框架" class="headerlink" title="4.三层架构模式和框架"></a>4.三层架构模式和框架</h2><p>每一层对应着一个框架</p><ol><li>界面层—SpringMVC框架</li><li>业务层—Spting框架</li><li>持久层—MyBatis框架</li></ol><p>MyBatis框架:<br>    MyBatis是一个优秀的基于java的持久层框架，内部封装了jdbc,开发者只需要关注sql语句本身，而不需要处理加载驱动、创建连接、创建statlement、 关闭连</p><h2 id="5-框架"><a href="#5-框架" class="headerlink" title="5.框架"></a>5.框架</h2><p>1)什么是框架(framework)<br>框架：就是一个软件，完成了部分的功能。软件中的类和类之间的方法调用都已经规定好了。通过这些可以完成某些功能。框架看做是模版。</p><p>框架是可以升级的，改造的。框架是安全的。<br>框架是对某一个方面有用的，不是全能的。</p><h2 id="6-框架解决的问题"><a href="#6-框架解决的问题" class="headerlink" title="6.框架解决的问题"></a>6.框架解决的问题</h2><p>1)框架能实现技术的整合。<br>2)提供开发的效率。降低难度。</p><h2 id="7-jdbc访问数据库的优缺点"><a href="#7-jdbc访问数据库的优缺点" class="headerlink" title="7.jdbc访问数据库的优缺点"></a>7.jdbc访问数据库的优缺点</h2><p>优点:<br>　　1.直观，好理解.</p><p>缺点:<br>　　1.创建很多对象Connection ,Statement, ResultSet<br>　　2.注册驱动<br>　　3.执行sq|语句<br>　　4.把ResultSet转为Student，List集合。<br>　　5.关闭资源<br>　　6.sq|语句和业务逻辑代码混在一起</p><h2 id="8-MyBatis框架"><a href="#8-MyBatis框架" class="headerlink" title="8 MyBatis框架"></a>8 MyBatis框架</h2><p>什么mybatis：是一个持久层框架，原名是ibatis， 2013改名为 MyBatis. MyBatis可以操作数据库，对数据执行增删改查。看做是高级的jdbc。 解决jdbc的缺点。</p><p>mybatis能做什么?<br>　　1)注册驱动。<br>　　2)创建jdbc中使用的Connection, Statement, ResultSet<br>　　3)执行sq|语句， 得到ResultSet<br>　　4)处理ResultSet，把记录集中的数据转为java对象， 同时还能把java对象放入到List集合。<br>　　5)关闭资源<br>　　6)实现sql语句和java代码的解耦合。</p><p>mybatis的官网: <a href="https://mybatis.org/mybatis-3/zh/index.html">https://mybatis.org/mybatis-3/zh/index.html</a></p><h1 id="第二章-Mybatis框架快速入门"><a href="#第二章-Mybatis框架快速入门" class="headerlink" title="第二章 Mybatis框架快速入门"></a>第二章 Mybatis框架快速入门</h1><h2 id="2-1-第一个例子"><a href="#2-1-第一个例子" class="headerlink" title="2.1 第一个例子"></a>2.1 第一个例子</h2><p>实现步骤:<br>　　0.创建student表(id, name, email, age)<br>　　1.新建maven项目<br>　　2.修改pom.xml<br>　　　　1)加入依赖mybatis依赖， mysq|驱动， junit<br>　　　　2)在<build>加入资源插件<br>　　3.创建实体类Student。义属性，属性名和列名保持- 致<br>　　4.创建Dao接口，定义操作数据库的方法。<br>　　5.创建xm|文件(mapper文件)，写sq|语句。<br>　　　mybatis框架推荐是把sq|语句和java代码分开<br>　　　mapper文件:定义和dao接口在同一目录，-个表一个mapper文件。<br>　　6.创建mybatis的主配置文件(xml文件) :有一个，放在resources目录 下<br>　　　　1)定义创建连接实例的数据源(DataSource) 对象<br>　　　　2)指定其他mapper文件的位置<br>　　7.创建测试的内容。<br>　　　使用main方法，测试mybatis访问数据库<br>　　　也可以使用junit访问数据库</p><p><strong>建表</strong><br><img src="https://gitee.com/kokolote/pic/raw/master/img/mybaitis/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20210912182424.png"></p><p><strong>配置pom文件</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mysql-connector-java--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--资源插件: 处理src/main/java目录中的xml--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span><span class="comment">&lt;!--所在的目录--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span><span class="comment">&lt;!--包括目录下的.properties.xml文件 都会打描到--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 报错，我又添加了这个 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 这个注销掉，install也报错，我又添加了这个 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.22.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">skipTests</span>&gt;</span>true<span class="tag">&lt;/<span class="name">skipTests</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--        &lt;plugins&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;plugin&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                &lt;version&gt;3.1&lt;/version&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                &lt;configuration&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                    &lt;source&gt;1.8&lt;/source&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                    &lt;target&gt;1.8&lt;/target&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                &lt;/configuration&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;/plugin&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;/plugins&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>创建实体类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.soft.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="comment">//属性名和列名一样</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;学生实体的信息&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, email=&#x27;&quot;</span> + email + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEmail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmail</span><span class="params">(String email)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.email = email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(Integer age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>创建接口StudentDao</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.soft.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.soft.domain.Student;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">StudentDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询一个学生</span></span><br><span class="line">    <span class="function">Student <span class="title">selectStudentById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>创建写sql语句的StudentDao.xml</strong><br>和StudentDao接口一个文件夹即可</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.soft.dao.StudentDao&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 查询一个学生Student</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        &lt;select&gt;:表示查询操作，里面是select语句</span></span><br><span class="line"><span class="comment">        id: 要执行的sql语句的唯一标识， 是一个自定义字符串。</span></span><br><span class="line"><span class="comment">            推荐使用dao接口中的方法名称</span></span><br><span class="line"><span class="comment">        resultType：告诉mybatis，执行sql语句，把数据赋值给那个类型的java对象。</span></span><br><span class="line"><span class="comment">                resultType的值现在使用的java对象的全限定名称</span></span><br><span class="line"><span class="comment">        类似JDBC这个操作</span></span><br><span class="line"><span class="comment">        while (rs.next()) &#123;</span></span><br><span class="line"><span class="comment">            Student stu = new Student();</span></span><br><span class="line"><span class="comment">            stu.setId(rs.getInt(&quot;id&quot;));</span></span><br><span class="line"><span class="comment">            stu.setName(rs.getString(&quot;name&quot;));</span></span><br><span class="line"><span class="comment">            stu.setAge(rs.getInt(&quot;age&quot;));</span></span><br><span class="line"><span class="comment">            //从数据库取出数据转为Student对象，封装到List集合</span></span><br><span class="line"><span class="comment">            stuList.add(stu);</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectStudentById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.soft.domain.Student&quot;</span>&gt;</span></span><br><span class="line">        select id, name, email, age from student where id = 1001</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    1.约束文件</span></span><br><span class="line"><span class="comment">        http://mybatis.org/dtd/mybatis-3-mapper.dtd</span></span><br><span class="line"><span class="comment">        约束文件作用：定义和限制当前文件中可以使用的标签和属性，以及标签出现的顺序。</span></span><br><span class="line"><span class="comment">    2. mapper是根标签</span></span><br><span class="line"><span class="comment">        namespace: 命名空间，必须有值，不能为空。唯值。</span></span><br><span class="line"><span class="comment">                    推荐使用Dao接口的全限定名称。</span></span><br><span class="line"><span class="comment">        作用：参与识别sql语句的作用。</span></span><br><span class="line"><span class="comment">    3.在mapper里面可以写&lt;insert&gt;, &lt;update&gt;, &lt;delete&gt;, &lt;select&gt;等标签。</span></span><br><span class="line"><span class="comment">        &lt;insert&gt;里面是insert语句， 表示执行的insert操作</span></span><br><span class="line"><span class="comment">        &lt;update&gt;里面是update语句</span></span><br><span class="line"><span class="comment">        &lt;delete&gt;里面是delete语句</span></span><br><span class="line"><span class="comment">        &lt;select&gt;里面是select语句</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><p><strong>创建mybatis.xml配置文件</strong><br>在resources文件夹下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 配置数据源: 创建Connection对象。 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://192.168.56.10:3306/mybatisdb?useUnicode=true<span class="symbol">&amp;amp;</span>zeroDateTimeBehavior=convertToNull&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--指定其他mapper文件的位置:</span></span><br><span class="line"><span class="comment">        其他其他mapper文件目的是找到其他文件的sql语句</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            使用mapper的resource属性指定mapper文件的路径。</span></span><br><span class="line"><span class="comment">            这个路径是从target/classes路径开启的</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            使用注意:</span></span><br><span class="line"><span class="comment">                resource=&quot;mapper文件的路径，使用 / 分割路径”</span></span><br><span class="line"><span class="comment">                一个mapper resource 指定一个mapper文件</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/soft/dao/StudentDao.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>写测试类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.soft;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.soft.domain.Student;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//测试mybatis执行sql语句</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSelectStudentById</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//调用mybatis某个对象的方法，执行mapper文件中的sql语句</span></span><br><span class="line">        <span class="comment">//mybatis核心类: sqlSessionFactory</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.定义mybatis主配置文件的位置，从类路径开始的相对路径</span></span><br><span class="line">        String config=<span class="string">&quot;mybatis.xml&quot;</span>;</span><br><span class="line">        <span class="comment">//2.读取主配置文件，使用mybatis框架中的Resources类</span></span><br><span class="line">        InputStream inputStream = Resources.getResourceAsStream(config);</span><br><span class="line">        <span class="comment">//3.创建SqlSessionFactory对象， 使用SqlSessionFactoryBuidler类</span></span><br><span class="line">        SqlSessionFactory factory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.获取SqlSession对象。</span></span><br><span class="line">        SqlSession session = factory.openSession();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5.指定要执行的sql语句的 id</span></span><br><span class="line">        <span class="comment">// sql的id = namespace+&quot;.&quot;+ select|update|insert|delete标签的id属性值</span></span><br><span class="line">        String sqlId = <span class="string">&quot;com.soft.dao.StudentDao&quot;</span>+<span class="string">&quot;.&quot;</span>+<span class="string">&quot;selectStudentById&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//6.通过sqlSession的方法，执行sql语句</span></span><br><span class="line">        Student student = session.selectOne(sqlId);</span><br><span class="line">        System.out.println(<span class="string">&quot;使用mybatis查询一个学生: &quot;</span>+student);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//7.关闭SqlSession对象</span></span><br><span class="line">        session.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果</strong></p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用mybatis查询一个学生: 学生实体的信息&#123;id=1001, name=&#x27;李四&#x27;, email=&#x27;lisi@qq,com&#x27;, age=22&#125;</span><br></pre></td></tr></table></figure><p><strong>层级结构是这样的</strong></p><!-- ![](https://gitee.com/kokolote/pic/raw/master/img/mybaitis/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20210912201515.png) --><img src="https://gitee.com/kokolote/pic/raw/master/img/mybaitis/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20210912201515.png" width="600"  height = "600" /><h2 id="2-2-关于-的应用"><a href="#2-2-关于-的应用" class="headerlink" title="2.2 关于#{}的应用"></a>2.2 关于#{}的应用</h2><p>修改之前代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.soft.dao.StudentDao&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- #&#123;studentId&#125;:占位符，表 示从java程序中传入过来的数据 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectStudentById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.soft.domain.Student&quot;</span>&gt;</span></span><br><span class="line">        select id, name, email, age from student where id = #&#123;studentId&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>测试类改这里</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//6.通过sqlSession的方法，执行sql语句</span></span><br><span class="line">Student student = session.selectOne(sqlId, <span class="number">1002</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;使用mybatis查询一个学生: &quot;</span>+student);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>运行结果</strong></p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用mybatis查询一个学生: 学生实体的信息&#123;id=1002, name=&#x27;张三&#x27;, email=&#x27;zs@qq.com&#x27;, age=20&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3-添加日志"><a href="#2-3-添加日志" class="headerlink" title="2.3 添加日志"></a>2.3 添加日志</h2><p>在configuration标签下，添加日志<br>值得属性参考官网：<a href="https://mybatis.org/mybatis-3/zh/logging.html">https://mybatis.org/mybatis-3/zh/logging.html</a><br>STDOUT_LOGGING 表示打到控制台</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 设置日志 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;logImpl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;STDOUT_LOGGING&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 配置数据源: 创建Connection对象。 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://192.168.56.10:3306/mybatisdb?useUnicode=true<span class="symbol">&amp;amp;</span>zeroDateTimeBehavior=convertToNull&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--指定其他mapper文件的位置:</span></span><br><span class="line"><span class="comment">        其他其他mapper文件目的是找到其他文件的sql语句</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            使用mapper的resource属性指定mapper文件的路径。</span></span><br><span class="line"><span class="comment">            这个路径是从target/classes路径开启的</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            使用注意:</span></span><br><span class="line"><span class="comment">                resource=&quot;mapper文件的路径，使用 / 分割路径”</span></span><br><span class="line"><span class="comment">                一个mapper resource 指定一个mapper文件</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/soft/dao/StudentDao.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>再次运行测试类，查看控制台</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Logging initialized using &#x27;class org.apache.ibatis.logging.stdout.StdOutImpl&#x27; adapter.</span><br><span class="line">PooledDataSource forcefully closed/removed all connections.</span><br><span class="line">PooledDataSource forcefully closed/removed all connections.</span><br><span class="line">PooledDataSource forcefully closed/removed all connections.</span><br><span class="line">PooledDataSource forcefully closed/removed all connections.</span><br><span class="line">Opening JDBC Connection</span><br><span class="line"><span class="comment">&lt;!-- 创建一个连接对象 --&gt;</span></span><br><span class="line">Created connection 1965237677.</span><br><span class="line"><span class="comment">&lt;!-- 自动提交功能关闭 --&gt;</span></span><br><span class="line">Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@752325ad]</span><br><span class="line">==&gt;  Preparing: select id, name, email, age from student where id = ?</span><br><span class="line"><span class="comment">&lt;!-- java程序提供的参数值是什么，什么类型 --&gt;</span></span><br><span class="line">==&gt; Parameters: 1002(Integer)</span><br><span class="line"><span class="comment">&lt;!-- 列 --&gt;</span></span><br><span class="line">&lt;==    Columns: id, name, email, age</span><br><span class="line"><span class="comment">&lt;!-- 行值 --&gt;</span></span><br><span class="line">&lt;==        Row: 1002, 张三, zs@qq.com, 20</span><br><span class="line"><span class="comment">&lt;!-- 本次操作，涉及到了几行记录操作，这里是一行记录 --&gt;</span></span><br><span class="line">&lt;==      Total: 1</span><br><span class="line">使用mybatis查询一个学生: 学生实体的信息&#123;id=1002, name=&#x27;张三&#x27;, email=&#x27;zs@qq.com&#x27;, age=20&#125;</span><br><span class="line"><span class="comment">&lt;!-- 重置自动提交为true --&gt;</span></span><br><span class="line">Resetting autocommit to true on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@752325ad]</span><br><span class="line"><span class="comment">&lt;!-- 关闭连接 --&gt;</span></span><br><span class="line">Closing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@752325ad]</span><br><span class="line"><span class="comment">&lt;!-- 把连接放回到连接池中 --&gt;</span></span><br><span class="line">Returned connection 1965237677 to pool.</span><br></pre></td></tr></table></figure><h2 id="2-4概念"><a href="#2-4概念" class="headerlink" title="2.4概念"></a>2.4概念</h2><p>1.自动提交:当你的sql语句执行完毕后，提交事务。数据库更新操作之间保存到数据</p><p>2.手动（手工）提交事务:在你需要提交事务的位置，执行方法，提交事务或者回滚事务。</p><p><strong>手动提交事务</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">StudentDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询一个学生</span></span><br><span class="line">    <span class="function">Student <span class="title">selectStudentById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加学生</span></span><br><span class="line">    <span class="comment">//返回值int:表示本次操作影响的数据库的行数</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">insertStudent</span><span class="params">(Student student)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>在StudentDao.xml文件中添加sql</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--添加insert--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertStudent&quot;</span>&gt;</span></span><br><span class="line">    insert into student values(1003,&quot;李峰&quot;,&quot;lifeng@qq.com&quot;,26)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>测试类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testInsertStudent</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    String config=<span class="string">&quot;mybatis.xml&quot;</span>;</span><br><span class="line">    InputStream inputStream = Resources.getResourceAsStream(config);</span><br><span class="line">    SqlSessionFactory factory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line"></span><br><span class="line">    SqlSession session = factory.openSession();</span><br><span class="line"></span><br><span class="line">    String sqlId = <span class="string">&quot;com.soft.dao.StudentDao&quot;</span>+<span class="string">&quot;.&quot;</span>+<span class="string">&quot;insertStudent&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> rows = session.insert(sqlId);</span><br><span class="line">    System.out.println(<span class="string">&quot;使用mybatis添加一个学生，rows= &quot;</span>+rows);</span><br><span class="line"></span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>运行测试类，查看控制台</strong></p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Opening JDBC Connection</span><br><span class="line">Created connection 484589713.</span><br><span class="line">Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1ce24091]</span><br><span class="line">==&gt;  Preparing: insert into student values(1003,&quot;李峰&quot;,&quot;lifeng@qq.com&quot;,26)</span><br><span class="line">==&gt; Parameters: </span><br><span class="line">&lt;==    Updates: 1</span><br><span class="line">使用mybatis添加一个学生，rows= 1</span><br><span class="line">Rolling back JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1ce24091]</span><br><span class="line">Resetting autocommit to true on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1ce24091]</span><br><span class="line">Closing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1ce24091]</span><br><span class="line">Returned connection 484589713 to pool.</span><br></pre></td></tr></table></figure><p><strong>这样修改完，控制台没问题，但是数据库实际上没新增数据</strong><br><img src="https://gitee.com/kokolote/pic/raw/master/img/mybaitis/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20210912210642.png"></p><p><strong>原因是没加上提交事务的代码</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testInsertStudent</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    String config=<span class="string">&quot;mybatis.xml&quot;</span>;</span><br><span class="line">    InputStream inputStream = Resources.getResourceAsStream(config);</span><br><span class="line">    SqlSessionFactory factory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line"></span><br><span class="line">    SqlSession session = factory.openSession();</span><br><span class="line"></span><br><span class="line">    String sqlId = <span class="string">&quot;com.soft.dao.StudentDao&quot;</span>+<span class="string">&quot;.&quot;</span>+<span class="string">&quot;insertStudent&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> rows = session.insert(sqlId);</span><br><span class="line">    System.out.println(<span class="string">&quot;使用mybatis添加一个学生，rows= &quot;</span>+rows);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//mybatis默认执行sql语句是手工提交事务模式，在做insert, update, delete 后需要提交事务:</span></span><br><span class="line">    session.commit();</span><br><span class="line"></span><br><span class="line">    session.close();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>这次看控制台，其实还是报错，主键重复，于是我把主键限制去掉了,然后它给我提交两次，后来重新clean,install maven，结果好用了，我累了。。</strong></p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Opening JDBC Connection</span><br><span class="line">Created connection 807752428.</span><br><span class="line">Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@302552ec]</span><br><span class="line">==&gt;  Preparing: insert into student values(1011,&quot;李峰&quot;,&quot;lifeng@qq.com&quot;,26)</span><br><span class="line">==&gt; Parameters: </span><br><span class="line">&lt;==    Updates: 1</span><br><span class="line">使用mybatis添加一个学生，rows= 1</span><br><span class="line">Committing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@302552ec]</span><br><span class="line">Resetting autocommit to true on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@302552ec]</span><br><span class="line">Closing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@302552ec]</span><br><span class="line">Returned connection 807752428 to pool.</span><br></pre></td></tr></table></figure><p>这回添加进去了</p><h2 id="2-5使用占位符做添加"><a href="#2-5使用占位符做添加" class="headerlink" title="2.5使用占位符做添加"></a>2.5使用占位符做添加</h2><p><strong>测试类修改</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 6.通过SqlSession的方法，执行sql语句</span></span><br><span class="line">        Student student = <span class="keyword">new</span> Student();</span><br><span class="line">        student.setId(<span class="number">1004</span>) ;</span><br><span class="line">        student.setName(<span class="string">&quot;李思思&quot;</span>);</span><br><span class="line">        student.setEmail(<span class="string">&quot;lisisi@qq.com&quot;</span>);</span><br><span class="line">        student.setAge(<span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> rows = session.insert(sqlId, student);</span><br><span class="line">        System.out.println(<span class="string">&quot;使用mybatis添加一个学生，rows= &quot;</span>+rows);</span><br></pre></td></tr></table></figure><p><strong>把之前的注销掉，修改成这个</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--添加insert</span></span><br><span class="line"><span class="comment">    &lt;insert id=&quot;insertStudent&quot;&gt;</span></span><br><span class="line"><span class="comment">        insert into student values(1011,&quot;李峰&quot;,&quot;lifeng@qq.com&quot;,26)</span></span><br><span class="line"><span class="comment">    &lt;/insert&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    如果传入给mybatis是一个java对象，使用#&#123;属性名&#125; 获取此属性的值。</span></span><br><span class="line"><span class="comment">    属性值放到 #&#123;&#125;占位符的位置, mybatis执行此属性 对应的getXXx().</span></span><br><span class="line"><span class="comment">    例如#&#123;id&#125;，执行getId();</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertStudent&quot;</span>&gt;</span></span><br><span class="line">    insert into student values(#&#123;id&#125;, #&#123;name&#125;, #&#123;email&#125;, #&#123;age&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MyBatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git的简单使用</title>
      <link href="/2021/09/11/git/git%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2021/09/11/git/git%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Git常用命令"><a href="#Git常用命令" class="headerlink" title="Git常用命令"></a>Git常用命令</h1><table><thead><tr><th align="center">命令名称</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">git config –global user.name 用户名</td><td align="center">设置用户签名</td></tr><tr><td align="center">git config –global user.email 邮箱</td><td align="center">设置用户签名</td></tr><tr><td align="center">git init</td><td align="center">初始化本地库</td></tr><tr><td align="center">git status</td><td align="center">查看本地库状态</td></tr><tr><td align="center">git add 文件名</td><td align="center">添加到暂存区</td></tr><tr><td align="center">git commit m “ 日志信息 “ 文件名</td><td align="center">提交到本地库</td></tr><tr><td align="center">git reflog</td><td align="center">查看历史记录</td></tr><tr><td align="center">git reset hard 版本号</td><td align="center">版本穿梭</td></tr></tbody></table><h1 id="分支的操作"><a href="#分支的操作" class="headerlink" title="分支的操作"></a>分支的操作</h1><table><thead><tr><th align="center">命令名称</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">git branch 分支名</td><td align="center">创建分支</td></tr><tr><td align="center">git branch -v</td><td align="center">查看分支</td></tr><tr><td align="center">git checkout 分支名</td><td align="center">切换分支</td></tr><tr><td align="center">git merge 分支名</td><td align="center">把指定的分支合并到当前分支上</td></tr></tbody></table><h1 id="远程仓库操作"><a href="#远程仓库操作" class="headerlink" title="远程仓库操作"></a>远程仓库操作</h1><table><thead><tr><th align="center">命令名称</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">git remote -v</td><td align="center">查看当前所有远程地址别名</td></tr><tr><td align="center">git remote add 别名</td><td align="center">远程地址     起别名</td></tr><tr><td align="center">git push 别名 分支</td><td align="center">推送本地分支上的内容克隆到本地</td></tr><tr><td align="center">git clone 远程地址</td><td align="center">将远程仓库的内容克隆到本地</td></tr><tr><td align="center">git pull 远程库地址别名 远程分支名</td><td align="center">将远程仓库对于分支最新内容拉下来后与当前本地分支直接合并</td></tr><tr><td align="center">git remote rm 别名</td><td align="center">删除多余别名</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为什么要重写equals()和hashCode()?</title>
      <link href="/2021/09/09/java%E5%9F%BA%E7%A1%80/equals%E4%B8%8EhashCode/"/>
      <url>/2021/09/09/java%E5%9F%BA%E7%A1%80/equals%E4%B8%8EhashCode/</url>
      
        <content type="html"><![CDATA[<p>如果k1和k2的id相同，即代表这两把钥匙相同，可以用第二把钥匙打开用第一把钥匙锁的门</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Key</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Key</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WithoutHashCode</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Key k1 = <span class="keyword">new</span> Key(<span class="number">1</span>);</span><br><span class="line">        Key k2 = <span class="keyword">new</span> Key(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        HashMap&lt;Key, String&gt; hashMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        hashMap.put(k1, <span class="string">&quot;Key with id is 1&quot;</span>);</span><br><span class="line">        System.out.println(hashMap.get(k2));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">null</span></span><br></pre></td></tr></table></figure><p>解析：<br>当向HashMap中存入k1的时候，首先会调用Key这个类的hashcode方法，计算它的hash值，随后把k1放入hash值所指引的内存位置，在Key这个类中没有定义hashcode方法，就会调用Object类的hashcode方法，而Object类的hashcode方法返回的hash值是对象的地址。这时用k2去拿也会计算k2的hash值到相应的位置去拿，由于k1和k2的内存地址是不一样的，所以用k2拿不到k1的值。</p><p>重写hashcode方法仅仅能够k1和k2计算得到的hash值相同，调用get方法的时候会到正确的位置去找，但当出现散列冲突时，在同一个位置有可能用链表的形式存放冲突元素，这时候就需要用到equals方法去对比了，由于没有重写equals方法，它会调用Object类的equals方法，Object的equals方法判断的是两个对象的内存地址是不是一样，由于k1和k2都是new出来的，k1和k2的内存地址不相同，所以这时候用k2还是达不到k1的值。</p><p>什么时候需要重写hashcode和equals方法？<br>在HashMap中存放自定义的键时，就需要重写自定义对象的hashcode和equals方法</p><p>如何重写hashcode和equals方法?</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Key</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Key</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id.hashCode();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (obj == <span class="keyword">null</span> || !(obj <span class="keyword">instanceof</span> Key)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.getId().equals(((Key) obj).getId());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WithoutHashCode</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Key k1 = <span class="keyword">new</span> Key(<span class="number">1</span>);</span><br><span class="line">        Key k2 = <span class="keyword">new</span> Key(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        HashMap&lt;Key, String&gt; hashMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        hashMap.put(k1, <span class="string">&quot;Key with id is 1&quot;</span>);</span><br><span class="line">        System.out.println(hashMap.get(k2));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单工厂模式</title>
      <link href="/2021/09/09/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/"/>
      <url>/2021/09/09/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="1、学习前准备"><a href="#1、学习前准备" class="headerlink" title="1、学习前准备"></a>1、学习前准备</h1><h2 id="一、学习工厂设计模式，必须知道的相关概念："><a href="#一、学习工厂设计模式，必须知道的相关概念：" class="headerlink" title="一、学习工厂设计模式，必须知道的相关概念："></a>一、学习工厂设计模式，必须知道的相关概念：</h2><p>1、产品：<br>    类<br>2、抽象产品：<br>    抽象类、接口<br>3、产片簇</p><p>4、产品等级</p><p>产品等级和产品簇的关系：<br><img src="https://cdn.jsdelivr.net/gh/Daishu3278/pic/img/%E4%BA%A7%E5%93%81%E7%AD%89%E7%BA%A7%E5%92%8C%E4%BA%A7%E5%93%81%E7%B0%87%E7%9A%84%E5%85%B3%E7%B3%BB.png" alt="产品等级和产品簇的关系.png"></p><h2 id="二、学习设计模式，脑袋里始終要绷紧2根弦："><a href="#二、学习设计模式，脑袋里始終要绷紧2根弦：" class="headerlink" title="二、学习设计模式，脑袋里始終要绷紧2根弦："></a>二、学习设计模式，脑袋里始終要绷紧2根弦：</h2><p>a. 开发代码的程序猿，被划分为两种角色：<br>作者(服务器端程序猿)<br>用户(客户端程序猿)</p><p>比如，我们使用c3p0时，我们拿着别人写好的数据库连接池的字节码在使用，制作c3p0的程序猿就是作者而我们自己就是用户</p><p>b. 我们手头并不会是时时刻刻都拥有作者的源代码的，比如在使用c3p0的时候，我们能用，但是我们找不到c3p0的源码文件（*.java）此时就算我们想改c3p0的源代码，        都改不着！就算我们手头真的有c3p0的源码，也不能改，因为要符合闭原则，</p><h1 id="2、没有用简单工厂模式的代码"><a href="#2、没有用简单工厂模式的代码" class="headerlink" title="2、没有用简单工厂模式的代码"></a>2、没有用简单工厂模式的代码</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.designpattern.simplefactory.a;</span><br><span class="line"></span><br><span class="line"><span class="comment">//抽象产品</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Food</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//具体产品</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hamburger</span> <span class="keyword">implements</span> <span class="title">Food</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;吃汉堡包！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//上面是作者，线下面是客户</span></span><br><span class="line"><span class="comment">// =================================================================================================</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Food f = <span class="keyword">new</span> Hamburger();</span><br><span class="line">        f.eat();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 这种设计相当服务!为什么呢? 因为，只要作者修改了具体产品的类名，那么害户靖代码也要随之一起改变。9这样服务器端代码，和客户端代码就是耦合的!</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 我们希望的效果是， 无论服务器蒲代码如何修改，客户请代码都应该不知道，不用修改客户端代码!</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="3、简单工厂模式示例"><a href="#3、简单工厂模式示例" class="headerlink" title="3、简单工厂模式示例"></a>3、简单工厂模式示例</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.designpattern.simplefactory.b;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 针对a包的问题，服务器端代码一旦修改，客户端代码也要跟着修改!</span></span><br><span class="line"><span class="comment">// 针对代码如下，使用简单工厂设计模式。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//抽象产品</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Food</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//具体产品</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hamburger</span> <span class="keyword">implements</span> <span class="title">Food</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;吃汉堡包！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RiceNoodle</span> <span class="keyword">implements</span> <span class="title">Food</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;吃过桥米线！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FoodFactory</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Food <span class="title">getFood</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">        Food food = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">switch</span> (n) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                food = <span class="keyword">new</span> Hamburger();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                food = <span class="keyword">new</span> RiceNoodle();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> food;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//上面是作者，线下面是客户</span></span><br><span class="line"><span class="comment">// =================================================================================================</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 反例，参考缺点3      扩展类在工厂类里就没有</span></span><br><span class="line"><span class="comment">// ------------------------------</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Lp</span> <span class="keyword">implements</span> <span class="title">Food</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;三秦套餐之一：凉皮！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 写完代码，反思三个问题，我的代码能不能适用于变化：</span></span><br><span class="line"><span class="comment">// 1、 重用性怎么样</span></span><br><span class="line"><span class="comment">// 2、 扩展性怎么样</span></span><br><span class="line"><span class="comment">// 3、 能不能随意替换</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Food f = FoodFactory.getFood(<span class="number">2</span>);</span><br><span class="line">        f.eat();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 简单工厂</span></span><br><span class="line"><span class="comment"> *      优点</span></span><br><span class="line"><span class="comment"> *          1.把具体产品的类型，从客户端代码中，解耦出来。</span></span><br><span class="line"><span class="comment"> *          2.服务器端，如果修改了具体产品的类名，客户端也知道!</span></span><br><span class="line"><span class="comment"> *          这便符合了“面向接口编程”的思想</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *      缺点</span></span><br><span class="line"><span class="comment"> *          1.客户端不得不死记硬背那些常量与具体产品的映射关系，比如，1对应汉堡包，2对应米线</span></span><br><span class="line"><span class="comment"> *          2.如何具体产品特别多，则简单工厂，就会变得十分臃肿。比如有100个具体产品，则需要在简单工厂的switch中写出100个case!</span></span><br><span class="line"><span class="comment"> *          3.最重要的是，变化来了。客户端需要扩展具体产品的时候。势必要修改简单工厂中的代码，这样便违反了“开闭原则”。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计模式 </tag>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代码演示</title>
      <link href="/2021/09/09/%E4%BB%A3%E7%A0%81%E5%9D%97%E6%BC%94%E7%A4%BA/%E6%BC%94%E7%A4%BA/"/>
      <url>/2021/09/09/%E4%BB%A3%E7%A0%81%E5%9D%97%E6%BC%94%E7%A4%BA/%E6%BC%94%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;hello, world&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://hexo.io/icon/favicon-196x196.png" alt="alt text" title="Logo Title Text 1"></p><p>我的天</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/09/03/hello-world/"/>
      <url>/2021/09/03/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
